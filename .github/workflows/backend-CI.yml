# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Backend CI

on:
  - push
#  push:
#    paths: backend/*
#  pull_request:
#    paths: backend/*

jobs:
  build: 
    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
        os: [ubuntu-latest, windows-latest, macOs-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-build-${{ env.cache-name }}-
            ${{ matrix.os }}-build-
            ${{ matrix.os }}-
      - name: Build backend
        run: cd backend && npm install
        
  backend-test:
    needs: [build]
    
    runs-on: ${{matrix.os}}
    
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
        os: [ubuntu-latest, windows-latest, macOs-latest]
    
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: CI tests
        if: steps.${{matrix.os}}-build == 'true'
        run: cd backend && npm run ci-test
        
    env:
      CI: true
